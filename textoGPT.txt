Faça uma implementação de um virtual memory manager na linguagem C vou explicar algumas coisas:
-se baseia na implementação do Designing a Virtual Memory Manager
apresentado na página P-51 do livro Operating System Concepts, Silberschatz, A. et al, 10a
edição.. Contudo, seguem algumas modificações:
- Ao invés de utilizar uma memoria principal ( ou memoria física) você so vai utilizar a TLB page table e memoria secundaria(BACKING_STORE.bin) a fim de tornar a implementação mais fácil
- A memoria secundaria eh o BACKING_STORE.bin
- a page table vai ter tamanho 128.
- Deve-se implementar dois algoritmos de substituição de página, fifo e lru, enquanto
que na TLB será aplicado apenas o fifo;

- O primeiro argumento por linha de comando será um arquivo de endereços lógicos (similar ao
address.txt anexado), o segundo argumento será o tipo de algoritmo a ser
utilizado para substituição da página na page table(fifo ou lru(least recently used). 
exemplo:

./vm address.txt fifo

indica que o algoritmo de substituição da página será o fifo.

- O arquivo de saída será denominado como correct.txt, seguindo rigorosamente a mesma
formatação do que foi anexado, que no caso utilizou o fifo;
Levando em consideração o output(correct.txt que eu ja te mandei) é importante que voce tambem faça essa parte que fica no fim do arquivo (SIGA A RISCA O EXEMPLO DE SAIDA)
Number of Translated Addresses = 1000
Page Faults = 538
Page Fault Rate = 0.538
TLB Hits = 54
TLB Hit Rate = 0.054

segue um possivel input (adresses.txt) um output para esse input (correct.txt) e a memoria secundaria (BACKING_STORE.bin) 
